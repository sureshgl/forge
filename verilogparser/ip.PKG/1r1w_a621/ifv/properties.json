{
   "primary_design_constraints" : [
      "des.algo_top.a1_loop.algo.assume_select_addr_.*",
      "des.algo_top.assume_select_addr_.*",
      "des.algo_top.t1_loop.*.align_loop.infra.assume_select_addr_.*",
      "des.algo_top.t2_loop.*.align_loop.infra.assume_select_addr_.*",
      "des.algo_top.t2_loop.*.stack_loop.infra.assume_select_addr_.*",

      "des.algo_top.a1_loop.algo.ip_top_sva.assume_pdat_serr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_pdat_derr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_pdat_nerr_check",

      "des.algo_top.a1_loop.algo.ip_top_sva.assume_rddat_derr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_rddat_nerr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_rddat_serr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_sold_derr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_sold_nerr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_sold_serr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state1_derr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state1_err_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state1_nerr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state1_serr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state2_derr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state2_err_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state2_nerr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva.assume_state2_serr_check",

      "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assume_mem_derr_check",
      "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assume_mem_nerr_check",
      "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assume_mem_serr_check",

      "des.algo_top.t2_loop.*.align_loop.infra.ip_top_sva.assume_mem_derr_check",
      "des.algo_top.t2_loop.*.align_loop.infra.ip_top_sva.assume_mem_nerr_check",
      "des.algo_top.t2_loop.*.align_loop.infra.ip_top_sva.assume_mem_serr_check",

      "des.algo_top.a1_loop.algo.ip_top_sva_2.assert_rd_range_check",
      "des.algo_top.a1_loop.algo.ip_top_sva_2.assert_wr_range_check",

      "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assert_mem_check",
      "des.algo_top.t2_loop.*.stack_loop.infra.ip_top_sva.assert_mem_check",

      "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assert_mem_check",
      "des.algo_top.t2_loop.*.stack_loop.infra.ip_top_sva.assert_mem_check"

   ],
   "conditional_properties" : {
      "ALWAYS" : [
         {
            "expected" : "Pass_Trigger_Fail",
            "regexp" : [
                "des.algo_top.a1_loop.algo.ip_top_sva_2.t2_loop.*.assert_t2_rw_pseudo_check",
                "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assert_dout_derr_check",
                "des.algo_top.t1_loop.*.align_loop.infra.ip_top_sva.assert_dout_serr_check",
                "des.algo_top.t2_loop.*.align_loop.infra.ip_top_sva.assert_dout_derr_check",
                "des.algo_top.t2_loop.*.align_loop.infra.ip_top_sva.assert_dout_serr_check"
             ]
         }
      ],
      "ECC_NONE" : [
         {
            "expected" : "Pass_Trigger_Fail",
            "regexp" : [
                "des.algo_top.a1_loop.algo.ip_top_sva.assert_rddat_derr_check",
                "des.algo_top.a1_loop.algo.ip_top_sva.assert_rddat_serr_check"
                ]
         }
      ],
      "ECC_PARITY" : [
         {
            "expected" : "Pass_Trigger_Fail",
            "regexp" : [
                "des.algo_top.a1_loop.algo.ip_top_sva.assert_rddat_derr_check"
            ]
         }
      ]
   }
}
