{   
   "primary_design_constraints" : [
      "des.algo_top.a1_loop.algo.assume_select_addr_range",
      "des.algo_top.a1_loop.algo.assume_select_addr_stable",
      "des.algo_top.a1_loop.algo.assume_select_bit_range",
      "des.algo_top.a1_loop.algo.assume_select_bit_stable",
      "des.algo_top.a2_loop.*.algo.assume_select_addr_range",
      "des.algo_top.a2_loop.*.algo.assume_select_addr_stable",
      "des.algo_top.a2_loop.*.algo.assume_select_bit_range",
      "des.algo_top.a2_loop.*.algo.assume_select_bit_stable",
      "des.algo_top.assume_select_addr_range",
      "des.algo_top.assume_select_addr_stable",
      "des.algo_top.assume_select_bit_range",
      "des.algo_top.assume_select_bit_stable",
      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.assume_select_addr_range",
      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.assume_select_addr_stable",
      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assume_mem_derr_check",
      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assume_mem_nerr_check",
      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assume_mem_serr_check",
      "des.algo_top.t2c_loop.*.align_loop.infra.assume_select_addr_stable",
      "des.algo_top.t2c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_derr_check",
      "des.algo_top.t2c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_nerr_check",
      "des.algo_top.t2c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_serr_check",
      "des.algo_top.t2c_loop.*.stack_loop.infra.assume_select_addr_range",
      "des.algo_top.t2c_loop.*.align_loop.infra.assume_select_addr_range",
      "des.algo_top.t2c_loop.*.stack_loop.infra.assume_select_addr_stable",
      "des.algo_top.t3c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_derr_check",
      "des.algo_top.t3c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_nerr_check",
      "des.algo_top.t3c_loop.*.align_loop.infra.ip_top_sva.err_loop.*.assume_mem_serr_check",
      "des.algo_top.t3c_loop.*.stack_loop.infra.assume_select_addr_range",
      "des.algo_top.t3c_loop.*.stack_loop.infra.assume_select_addr_stable",
      "des.algo_top.t3c_loop.*.align_loop.infra.assume_select_addr_range",
      "des.algo_top.t3c_loop.*.align_loop.infra.assume_select_addr_stable",

      "des.algo_top.a1_loop.algo.ip_top_sva_2.prt_loop.*.rd_loop.assert_rd_check",
      "des.algo_top.a1_loop.algo.ip_top_sva_2.prt_loop.*.wr_loop.assert_wr_check",
      "des.algo_top.a1_loop.algo.ip_top_sva_2.prt_loop.*.wr_loop.assert_wr_range_check",

      "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assert_mem_check",
      "des.algo_top.t2c_loop.*.stack_loop.infra.ip_top_sva.rd_loop.*.assert_mem_check",
      "des.algo_top.t3c_loop.*.stack_loop.infra.ip_top_sva.rd_loop.*.assert_mem_check"
   ],

   "conditional_properties" : {
      "ALWAYS" : [
         {
            "expected" : "Pass_Trigger_Fail",
            "regexp" : [
               "des.algo_top.a1_loop.algo.ip_top_sva_2.t2_loop.*.t2w_loop.*.t2rp_loop.*.assert_t2_rw_pseudo_check",
               "des.algo_top.a1_loop.algo.ip_top_sva_2.t3_loop.*.t3w_loop.*.t3rp_loop.*.assert_t3_rw_pseudo_check",
               "des.algo_top.a1_loop.algo.ip_top_sva.dout_loop.2..assert_dout_check"
            ]            
         }
      ],
      "ECC_NONE" : [
         {
            "expected" : "Pass_Trigger_Fail",
            "regexp" : [
               "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assert_dout_derr_check",
               "des.algo_top.t1r_loop.*.t1b_loop.*.align_loop.infra.ip_top_sva.assert_dout_serr_check"
            ]
         }
      ]
   }
}
