/* DO NOT EDIT THIS FILE
   File generated by:
	/auto/dsbu-asic/view/head_dopplerds_R0000/bin/vpp.pl \
	 -perl -output gsrc/RAMWRAP_1R1WAC_FULL_model.v \
	+define+output_file=gsrc/RAMWRAP_1R1WAC_FULL_model.v +incdir+gsrc \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/top/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/common/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/emul/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ibm/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/aqm/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ase/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/cmm/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/egr/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ele/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/epf/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/epp/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/eqc/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/esm/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fpe/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fps/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/frw/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fse/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/hsh/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/igr/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ile/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ipf/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ipp/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/iqs/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/msc/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nfl/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nif/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nru/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/oft/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/pbc/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/plc/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rmu/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rre/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rwe/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sec/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sif/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sqs/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sup/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tsq/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/taq/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tfq/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tlq/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xba/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xbf/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xfc/rtl \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/top/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/common/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/emul/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/dvpp/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/cima/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/aqm/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ase/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/cmm/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/egr/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ele/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/epf/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/epp/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/eqc/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/esm/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fpe/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fps/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/frw/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/fse/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/hsh/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/igr/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ile/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ipf/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/ipp/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/iqs/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/msc/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nfl/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nif/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/nru/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/oft/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/pbc/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/plc/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rmu/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rre/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/rwe/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sec/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sif/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sqs/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/sup/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tsq/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/taq/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tfq/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/tlq/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xba/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xbf/tbench \
	+incdir+/auto/dopplerds/view/head_dopplerds_R0000/xfc/tbench \
	+incdir+/auto/dsbu-asic/view/head_dopplerds_R0000/rtl \
	+incdir+/auto/dsbu-asic/view/head_dopplerds_R0000/tbench \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/fav/rtl \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/top/tbench \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/kgen/tbench \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/gcm/tbench \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/paq/tbench \
	+incdir+/auto/dsbu-asic-core/dvpp/view/head_dopplerds_R0000/fav/tbench \
	+incdir+/auto/dsbu-asic-core/nifvmm/view/head_dopplerds_R0000/coreOnly/tbench \
	+incdir+/auto/dsbu-asic-core/nifvmm/view/head_dopplerds_R0000/common/tbench \
	+incdir+/auto/dsbu-asic-core/nifvmm/view/head_dopplerds_R0000/doppler/tbench \
	+incdir+/auto/dsbu-asic-core/matrix/view/head_dopplerds_R0000/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/top/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/common/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/emul/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/big/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/lil/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/bsp/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/cci/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ccx/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dmc/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/eth/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nap/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nmp/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nca/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncb/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncc/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncd/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nsp/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/pxc/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/sat/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/spq/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/tre/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/uhd/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/idt/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dpe/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/mce/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/cde/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dcm/rtl \
	+incdir+/auto/crays/view/head_dopplerds_R0000/top/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/common/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/emul/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/big/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/lil/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/bsp/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/cci/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ccx/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dmc/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/eth/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nap/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nmp/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nca/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncb/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncc/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/ncd/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/nsp/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/pxc/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/sat/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/spq/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/tre/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/uhd/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/idt/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dpe/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/mce/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/cde/tbench \
	+incdir+/auto/crays/view/head_dopplerds_R0000/dcm/tbench \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Adm \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Amba \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Amba/mstr_cpl_buf \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Axi \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Cdm \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Edma \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Layer1 \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Layer2 \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Layer3 \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/Phy \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/common \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/common/DW_sbc \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/customer \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/customer/generic \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/include \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/products \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/vendor \
	+incdir+/auto/crays/vendor/synopsys/dwip/pcie2_0/R2015_02_27/i_DWC_pcie_dm/src/vendor/generic \
	+incdir+/auto/crays/vendor/synopsys/dwip/advanced_peripherals/spi/R2014_10_11/i_ssi/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/advanced_peripherals/i2c/R2014_10_11/i_i2c/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/advanced_peripherals/i2c/R2014_10_11/i_i2c/verilog_headers \
	+incdir+/auto/crays/vendor/synopsys/dwip/advanced_peripherals/uart/R2014_10_11/i_uart/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/mobile_storage/R2015_03_09/i_DWC_mobile_storage/src/ \
	+incdir+/auto/crays/vendor/synopsys/dwip/axi_gs/bspSram/R2013_10_02/i_axi_gs/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/axi_gs/treRom/R2014_10_01/i_axi_gs/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/axi_gs/R2013_08_06/i_axi_gs/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/top \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/axi \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/sgmii \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/common \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mac \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mdc \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mtl \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/pcs \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top-undef.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top.lst \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top_cc_constants.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top_cc_constants.vh \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top_params.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/DWC_gmac_top_params.vh \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/EthDwGmacOrder.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/axi \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/common \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mac \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mdc \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mmc \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/mtl \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/pcs \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/pmt \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/sgmii \
	+incdir+/auto/crays/vendor/synopsys/dwip/ethernet_mac/R2014_09_28/i_DWC_gmac/src/top \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_device/R2014_05_15/i_DWC_otg/src \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhc11_ahb_top \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhc11_subsys \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf/fifocntl \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf/hci_master \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf/listproc \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf/port_cfg \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb/uhostc_src/core_intf/rh_hregs \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/UhdHostFileOrder.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/UsbHostFileOrder.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ahb_biu \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/coretool_params.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ehci_ohci \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ehci_ohci_params.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ehci_ohci_top-undef.v \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/ehci_ohci_top.lst \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc11_ahb \
	+incdir+/auto/crays/vendor/synopsys/dwip/usb_host/R2014_02_25/i_DWC_h20ahb/src/uhc2_ahb \
	+incdir+/auto/crays/vendor/synopsys/dwip/advanced_peripherals/R2014_02_10/i_apb/src \
	+incdir+/auto/crays/vendor/synopsys/dwvip/R2015_02_17/src/sverilog/vcs \
	+incdir+/auto/crays/vendor/synopsys/dwvip/R2015_02_17/include/sverilog \
	+incdir+/auto/crays/vendor/synopsys/dwvip/R2015_02_17/src/verilog/vcs \
	+incdir+/auto/crays/vendor/synopsys/dwvip/R2015_02_17/include/verilog \
	+incdir+/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/common/rtl \
	+incdir+/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/emul/rtl \
	+incdir+/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/common/tbench \
	+incdir+/auto/dsbu-asic-core/gal3/view/head_dopplerds_R0000/rtl --perlinc gsrc \
	--perlinc /auto/dopplerds/view/head_dopplerds_R0000/top/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/common/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/emul/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ibm/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/aqm/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ase/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/cmm/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/egr/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ele/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/epf/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/epp/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/eqc/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/esm/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fpe/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fps/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/frw/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fse/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/hsh/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/igr/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ile/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ipf/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ipp/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/iqs/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/msc/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nfl/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nif/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nru/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/oft/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/pbc/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/plc/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rmu/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rre/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rwe/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sec/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sif/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sqs/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sup/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tsq/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/taq/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tfq/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tlq/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xba/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xbf/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xfc/rtl --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/top/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/common/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/emul/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/dvpp/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/cima/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/aqm/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ase/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/cmm/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/egr/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ele/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/epf/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/epp/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/eqc/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/esm/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fpe/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fps/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/frw/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/fse/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/hsh/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/igr/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ile/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ipf/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/ipp/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/iqs/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/msc/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nfl/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nif/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/nru/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/oft/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/pbc/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/plc/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rmu/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rre/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/rwe/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sec/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sif/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sqs/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/sup/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tsq/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/taq/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tfq/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/tlq/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xba/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xbf/tbench --perlinc \
	/auto/dopplerds/view/head_dopplerds_R0000/xfc/tbench --perlinc \
	/auto/dsbu-asic/view/head_dopplerds_R0000/lib/perl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/top/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/common/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/emul/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/big/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/lil/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/bsp/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/cci/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ccx/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dmc/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/eth/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nap/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nmp/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nca/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncb/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncc/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncd/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nsp/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/pxc/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/sat/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/spq/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/tre/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/uhd/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/idt/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dpe/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/mce/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/cde/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dcm/rtl --perlinc \
	/auto/crays/view/head_dopplerds_R0000/top/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/common/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/emul/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/big/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/lil/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/bsp/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/cci/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ccx/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dmc/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/eth/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nap/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nmp/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nca/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncb/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncc/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/ncd/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/nsp/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/pxc/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/sat/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/spq/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/tre/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/uhd/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/idt/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dpe/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/mce/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/cde/tbench --perlinc \
	/auto/crays/view/head_dopplerds_R0000/dcm/tbench --perlinc \
	/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/common/rtl --perlinc \
	/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/emul/rtl --perlinc \
	/auto/dsbu-asic-core/dglobals/view/head_dopplerds_R0000/common/tbench \
	/auto/dsbu-asic/view/head_dopplerds_R0000/wrappers/cisco_generic_RAMWRAP_1R1WAC_model.vs
*/
// $Id: cisco_generic_RAMWRAP_1R1WAC_model.vs,v 1.24 2014/04/16 12:47:52 thraghav Exp $
//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2006, Cisco Systems, Inc.
// All Rights Reserved.
//
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of Cisco Systems, Inc;
// the contents of this file may not be disclosed to third parties, copied or
// duplicated in any form, in whole or in part, without the prior written
// permission of Cisco Systems, Inc.
//
// RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to restrictions
// as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
// and Computer Software clause at DFARS 252.227-7013, and/or in similar or
// successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
// rights reserved under the Copyright Laws of the United States.
//
//////////////////////////////////////////////////////////////////////////////
//
// File          : cisco_generic_RAMWRAP_1R1WAC.vs
// Author        : Pete Johnson (petjohns@cisco.com)
// Description   : Generic One Read and One Write Asynchronous Clock Domain RAM wrapper
//
//
//////////////////////////////////////////////////////////////////////////////

`timescale 1ns / 1ps

`ifndef MACRO_log2
`include "log2.vh"
`endif

`ifdef CSM_DPI
 `ifndef CSM_SVDPI
  extern "C" void CSM_memaccess(input int id,input reg [63:0] t,input reg wen,input reg [] addr, input int awidth, input reg [] data, input int width);
 `endif
`endif

  module RAMWRAP_1R1WAC_FULL_model #(  parameter depth=0,
  parameter width=0,
  parameter DO_NOT_WRITE_X_ON_WRITE_THROUGH=0,
  parameter PIPELINE=0
) (
  input [`POWER_CTL_BUS_SIZE - 1:0] POWER_CTL,
  input CLK_R,
  input CLK_W,
  input SELN_R,
  input SELN_W,
  input [log2(depth)-1:0] A_R,
  input [log2(depth)-1:0] A_W,
  input WEN,
  input [width-1:0] DIN,
  output reg [width-1:0] DOUT
);

   reg [width-1:0] mem[depth-1:0];

`ifdef CSM_DPI
   parameter awidth=log2(depth);
   `ifndef CSM_MEMACCESS
     `ifdef CSM_SVDPI
      `define CSM_MEMACCESS(addr,data,wen) `CSM_SVDPI.memaccess(id,$time,wen,addr,awidth,data,width)
     `else
      `define CSM_MEMACCESS(addr,data,wen) CSM_memaccess(id,$time,wen,addr,awidth,data,width)
     `endif
   `endif
   integer id = 0;
   reg logread = 1'b0;
   reg logwrite = 1'b0;
`endif

   `MACRO_log2

`ifdef GENERIC_WRAPPER_NOCHECKS

   always @(posedge CLK_R) begin
      if (SELN_R == 1'b0) begin
         DOUT <= mem[A_R];
`ifdef CSM_DPI
         if (logread) `CSM_MEMACCESS(A_R,mem[A_R],1'b1);
`endif
      end
   end

   always @(posedge CLK_W) begin
      if (SELN_W == 1'b0 && WEN == 1'b0) begin : write_block
         mem[A_W] <= DIN;
`ifdef CSM_DPI
         if (logwrite) `CSM_MEMACCESS(A_W,DIN,WEN);
`endif
      end
   end

`else

   reg             wrapper_access_verbose = 0;
   reg             wrapper_error_verbose = 0;
   reg             wrapper_log = 0;
   reg             generic_wrapper_summary_stats_only = 0;
   reg             wrapper_stats_on;

   integer         valid_write_cycle_count = 0;
   event           write_cycle_event ;
   integer         valid_read_cycle_count = 0;
   event           read_cycle_event ;
   integer         nop_r_cycle_count = 0;
   event           nop_r_cycle_event ;
   integer         clk_r_cycle_count = 0;
   event           clk_r_cycle_event ;
   integer         nop_w_cycle_count = 0;
   event           nop_w_cycle_event ;
   integer         clk_w_cycle_count = 0;
   event           clk_w_cycle_event ;
   integer         mem_corruption_count = 0 ;
   event           mem_corruption_event ;
   integer         word_corruption_count = 0;
   event           word_corruption_event ;
   integer         write_through_error_count = 0;
   event           write_through_error_event ;

   reg [1600:1]    name ;
   integer         logfp ;

   initial
     begin
        wrapper_access_verbose = $test$plusargs( "wrapper_access_verbose" ) ;
        wrapper_error_verbose = $test$plusargs( "wrapper_error_verbose" ) ;
        wrapper_log = $test$plusargs( "wrapper_log" ) ;
        generic_wrapper_summary_stats_only = $test$plusargs( "generic_wrapper_summary_stats_only" ) ;
        if (wrapper_log)
          begin
             $sformat(name,"%m.wrapper_log");
             $display("Opening log file %0s",name);
             logfp = $fopen(name);
             $fdisplay(logfp,"Opening Diagnostics Log file for %m");
             $fclose(logfp);
          end
        wrapper_stats_on = wrapper_access_verbose | wrapper_log | wrapper_error_verbose;
     end // initial begin

   //--------------------------------------------------------------------------
   // collect cycle type counts

   `ifdef END_OF_SIM_EVENT
     always @ (`END_OF_SIM_EVENT)
       begin
          if (wrapper_log)
            begin
            logfp = $fopen(name,"a");
            $fwrite (logfp,"%m RAMWRAP_1R1WAC Summary : ");
            $fwrite(logfp," write cycles = %0d   ",clk_w_cycle_count);
            $fwrite(logfp," writes = %0d   ",valid_write_cycle_count);
            $fwrite(logfp," write nops = %0d   ",nop_w_cycle_count);
            $fwrite(logfp," read cycles = %0d   ",clk_r_cycle_count);
            $fwrite(logfp," reads = %0d   ",valid_read_cycle_count);
            $fwrite(logfp," read nops = %0d   ",nop_r_cycle_count);
            $fwrite(logfp," memory corrupts = %0d   ",mem_corruption_count);
            $fdisplay(logfp,"word corrupts = %0d   ",word_corruption_count);
            $fclose(logfp);
         end
       $write ("VCS_NOTE: %m RAMWRAP_1R1WAC Summary : ");
       $write(" write cycles = %0d   ",clk_w_cycle_count);
       $write(" writes = %0d   ",valid_write_cycle_count);
       $write(" write nops = %0d   ",nop_w_cycle_count);
       $write(" read cycles = %0d   ",clk_r_cycle_count);
       $write(" reads = %0d   ",valid_read_cycle_count);
       $write(" read nops = %0d   ",nop_r_cycle_count);
       $write("memory corrupts = %0d   ",mem_corruption_count);
       $write("word corrupts = %0d   ",word_corruption_count);
       $write("write+nop_w = %0d   ",valid_write_cycle_count+nop_w_cycle_count);
       $display("read+nop_r = %0d   ",valid_read_cycle_count+nop_r_cycle_count);
       end // always @ (`END_OF_SIM_EVENT)
   `endif

`ifdef WRAPPER_STATS_ON_EVENT
   always @(`WRAPPER_STATS_ON_EVENT) if (generic_wrapper_summary_stats_only) wrapper_stats_on = 1;  // might already be on even if summary stats flag off
`endif
`ifdef WRAPPER_STATS_OFF_EVENT
   always @(`WRAPPER_STATS_OFF_EVENT) wrapper_stats_on = 0;
`endif

   //--------------------------------------------------------------------------
   always @(write_cycle_event)
     begin : WRITE_CYCLE
        valid_write_cycle_count = valid_write_cycle_count +1 ;
        if ( wrapper_access_verbose )
          if (wrapper_log)
            begin
               logfp = $fopen(name,"a");
               $fdisplay(logfp,
                          "VCS_VERBOSE: %m   A_W=%0d   time=%0t", A_W, $realtime);
               $fclose(logfp);
            end
          else
            $display("VCS_VERBOSE: %m   A_W=%0d   time=%0t", A_W, $realtime);
     end // block: WRITE_CYCLE

   //--------------------------------------------------------------------------
   always @(read_cycle_event)
     begin : READ_CYCLE
        valid_read_cycle_count = valid_read_cycle_count +1 ;
        if ( wrapper_access_verbose )
          if (wrapper_log)
            begin
               logfp = $fopen(name,"a");
               $fdisplay(logfp,
                          "VCS_VERBOSE: %m   A_R=%0d   time=%0t", A_R, $realtime);
               $fclose(logfp);
            end
          else
            $display("VCS_VERBOSE: %m   A_R=%0d   time=%0t", A_R, $realtime);
     end // block: READ_CYCLE

   //--------------------------------------------------------------------------
   always @(nop_w_cycle_event)
     begin : NOP_W_CYCLE
        nop_w_cycle_count = nop_w_cycle_count +1 ;
        // No reason to log per clock nop events; makes log files too big anyway
     end // block: NOP_W_CYCLE

   always @(nop_r_cycle_event)
     begin : NOP_R_CYCLE
        nop_r_cycle_count = nop_r_cycle_count +1 ;
        // No reason to log per clock nop events; makes log files too big anyway
     end // block: NOP_R_CYCLE

   //--------------------------------------------------------------------------
   always @(clk_w_cycle_event)
     begin : CLK_W_CYCLE
        clk_w_cycle_count = clk_w_cycle_count +1 ;
     end // block: NOP_W_CYCLE

   always @(clk_r_cycle_event)
     begin : CLK_R_CYCLE
        clk_r_cycle_count = clk_r_cycle_count +1 ;
     end // block: NOP_R_CYCLE

   //--------------------------------------------------------------------------
   always @(mem_corruption_event)
     begin : MEMORY_CORRUPTION
        mem_corruption_count = mem_corruption_count +1 ;
        if ( wrapper_access_verbose | wrapper_error_verbose )
          if ( wrapper_log )
            begin
               logfp = $fopen(name,"a");
               $fdisplay(logfp,"VCS_VERBOSE: %m   A_W=%0d   SELN_W=%0b   WEN=%0b   time=%0t",
                          A_W, SELN_W, WEN, $realtime);
               $fclose(logfp);
            end
        else
          $display("VCS_VERBOSE: %m   A_W=%0d   SELN_W=%0b   WEN=%0b   time=%0t",
                    A_W, SELN_W, WEN, $realtime);
     end // block: MEMORY_CORRUPTION

   //--------------------------------------------------------------------------
   always @(word_corruption_event)
     begin : WORD_CORRUPTION
        word_corruption_count = word_corruption_count +1 ;
        if ( wrapper_access_verbose | wrapper_error_verbose)
          if ( wrapper_log )
            begin
               logfp = $fopen(name,"a");
               $fdisplay(logfp,"VCS_VERBOSE: %m   A_W=%0d   SELN_W=%0b   WEN=%0b   time=%0t",
                          A_W, SELN_W, WEN, $realtime);
               $fclose(logfp);
            end
        else
          $display("VCS_VERBOSE: %m   A_W=%0d   SELN_W=%0b   WEN=%0b   time=%0t",
                    A_W, SELN_W, WEN, $realtime);
     end // block: WORD_CORRUPTION

   //--------------------------------------------------------------------------
   always @(write_through_error_event)
     begin : WRITE_THROUGH_ERROR
        write_through_error_count = write_through_error_count +1 ;
        if ( wrapper_access_verbose | wrapper_error_verbose)
          if ( wrapper_log )
            begin
               logfp = $fopen(name,"a");
               $fdisplay(logfp,
               "VCS_VERBOSE: %m   A_W=%0d, SELN_W=%0b   WEN=%0b   A_R=%0h   SELN_R=%0b   time=%0t",
                          A_W, SELN_W, WEN, A_R, SELN_R, $realtime);
               $fclose(logfp);
            end
        else
          $display("VCS_VERBOSE: %m   A_W=%0d, SELN_W=%0b   WEN=%0b   A_R=%0h   SELN_R=%0b   time=%0t",
                    A_W, SELN_W, WEN, A_R, SELN_R, $realtime);
     end // block: WRITE_THROUGH_ERROR

   //--------------------------------------------------------------------------
   // sort out the begining of time

   reg seln_w_known = 1'b0;
   reg seln_r_known = 1'b0;

   event       start_mem_function_event ;
   reg         Ready = 0 ;

   always @ (SELN_W or SELN_R)
     if (Ready !== 1'b1)
       begin
        if ((seln_w_known === 1'b0) && (SELN_W !== 1'bx))
          seln_w_known <= 1'b1 ;
        if ((seln_r_known === 1'b0) && (SELN_R !== 1'bx))
          seln_r_known <= 1'b1 ;
       end

   always @ (seln_r_known or seln_w_known )
     if ( (seln_r_known === 1'b1) && (seln_w_known === 1'b1))
       -> start_mem_function_event ;

   always @ (start_mem_function_event )
     begin
        if (wrapper_log)
          begin
            $display("VCS_NOTE : %m : Ready - SELN_R (=%0b) and SELN_W (=%0b) known at %0t",
                  SELN_R,SELN_W, $realtime);
          end
        Ready <= 1'b1 ;
     end

   //--------------------------------------------------------------------------
   wire [width-1:0] tmp_en ;

       assign tmp_en = {width{1'b0}};


   always @(posedge CLK_R)
     begin: read_block
        reg [width-1:0] en;
        en = tmp_en ;
        if (Ready)

          if (wrapper_stats_on) -> clk_r_cycle_event ;

          case (SELN_R)
            1'b0:
            begin : SELN_R_CASE_0
               if (^A_R === 1'bx)
                 DOUT <= {width {1'bx}};
               else
                 if ((SELN_W === 1'b0) && (WEN === 1'b0)
                     && (A_R === A_W))
                   begin
                      if ( !(|en) )
                        begin
                           // all bits being written, so read impossible
                           -> write_through_error_event ;
                        end
                      else
                        begin
                           // some bits not written, so assume read is for those bits
                           if (wrapper_stats_on) -> read_cycle_event ;
                        end
                      DOUT <= mem[A_R] & en | {width {1'bx}} & ~en;
                   end
                 //This condition is not  a valid write_through condition and there is no write                  // happening in the write port
                 //else
                 //  if ((SELN_W === 1'b0) && (WEN === 1'bx)
                 //    && (A_R === A_W))
                 //	begin
                 //	DOUT <= {width {1'bx}};
	         //        end
                 else
                   begin
                      if (wrapper_stats_on) -> read_cycle_event ;
                      DOUT <= mem[A_R];
`ifdef CSM_DPI
                      if (logread) `CSM_MEMACCESS(A_R,mem[A_R],WEN);
`endif
                   end
            end
            1'b1:
              begin : SELN_R_CASE_1
                 DOUT <= {width {1'bx}};
                 if (wrapper_stats_on) -> nop_r_cycle_event;
              end
            1'bx:
              begin : SELN_R_CASE_X
                 DOUT <= {width {1'bx}};
              end
            1'bz:
              begin : SELN_R_CASE_Z
                 DOUT <= {width {1'bx}};
              end
          endcase // case (SELN_R)
     end // block: read_block

   //--------------------------------------------------------------------------

   always @(posedge CLK_W)
     begin: write_block
        reg [width-1:0] tmp;
        reg [width-1:0] en;
        integer         i;
        en = tmp_en ;

        if (Ready)

          if (wrapper_stats_on) -> clk_w_cycle_event ;

          case (SELN_W)
            1'b0:
              begin : SELN_W_CASE_0
                 //--------------------------------------------------------------
                 case (WEN)
                   1'b0:
                     begin: WEN_CASE_0
                        if (^A_W === 1'bx)
                          begin: mem_corrupt
                             if (wrapper_stats_on) -> mem_corruption_event;
                             for (i=0;i<depth;i=i+1)
                               mem[i] <= {width {1'bx}};
                          end
                        else if (^en === 1'bx)
                          begin: word_corrupt
                             if (wrapper_stats_on) -> word_corruption_event ;
                             mem[A_W] <= {width {1'bx}};
                          end
                        else
`ifndef NO_X_ON_ADDRESS_COLLISION
						   	if ((SELN_R === 1'b0) && (A_R === A_W) && (DO_NOT_WRITE_X_ON_WRITE_THROUGH == 0))
                       		begin
                          			if (wrapper_stats_on) -> word_corruption_event ;
                          			tmp = mem[A_W];
                             		mem[A_W] <= (tmp & en) | ({width {1'bx}} & ~en);
                            end
                            else
`endif
                          begin
                             if (wrapper_stats_on) -> write_cycle_event ;
                             tmp = mem[A_W];
                             mem[A_W] <= (tmp & en) | (DIN & ~en);
`ifdef CSM_DPI
                             if (logwrite) `CSM_MEMACCESS(A_W,(tmp & en) | (DIN & ~en),WEN);
`endif
                          end // else: !if(^A === 1'bx)
                     end // block: WEN_CASE_0
                   //--------------------------------------------------------------
                   1'b1:
                     begin: WEN_CASE_1
                        if (wrapper_stats_on) -> nop_w_cycle_event;
                     end
                   //--------------------------------------------------------------
                   1'bx:
                     begin : WEN_CASE_X
                        if (^A_W === 1'bx)
                          begin
                             if (wrapper_stats_on) -> mem_corruption_event;
                             for (i=0;i<depth;i=i+1)
                               mem[i] <= {width {1'bx}};
                          end
                        else
                          if (^en === 1'bx)
                            begin: word_corrupt
                               if (wrapper_stats_on) -> word_corruption_event ;
                               mem[A_W] <= {width {1'bx}};
                            end
                          else
                            begin
                               if (wrapper_stats_on) -> word_corruption_event ;
                               mem[A_W] <= {width {1'bx}};
                            end
                     end // block: WEN_CASE_X
                   //--------------------------------------------------------------
                   1'bz:
                     begin: WEN_CASE_Z
                     end
                 endcase // case(WEN)
              end // block: SELN_W_CASE_0
            //----------------------------------------------------------------
            1'b1:
              begin: SELN_W_CASE_1
                 if (wrapper_stats_on) -> nop_w_cycle_event;
              end
            //----------------------------------------------------------------
            1'bx:
              begin: SELN_W_CASE_X
                 if (^A_W === 1'bx)
                   begin
                      if (wrapper_stats_on) -> mem_corruption_event;
                      for (i=0;i<depth;i=i+1)
                        mem[i] <= {width {1'bx}};
                   end
                 else
                   begin
                      if (wrapper_stats_on) -> word_corruption_event ;
                      mem[A_W] <= {width {1'bx}};
                   end
                 DOUT <= {width {1'bx}};
              end // block: SELN_W_CASE_X
            //----------------------------------------------------------------
            1'bz:
              begin: SELN_W_CASE_Z
              end
            //----------------------------------------------------------------
          endcase
     end // block: write_block

`endif

endmodule // RAMWRAP_1R1WAC_FULL_model
